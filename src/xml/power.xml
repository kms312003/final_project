<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="mapper.power">
     
     <select id = "getPowerCount" resultType="int">
        select ifnull(count(*),0) from power
     </select>
     
     <select id = "getPowers" parameterType="hashmap" resultType="power">
        select * from power limit #{start}, #{end} 
     </select>
     
     <!-- 제품 조건 검색 -->
     <select id = "getSearchProducts" parameterType="hashmap" resultType="power">
        select * from power
     <where>
     <if test="productCompanys != null">
     <choose>
     	<when test="productCompanys.length == 0">
     	</when>
     	<when test="productCompanys.length == 1">
     		productCompany = #{productCompanys[0]} and
     	</when>
     	<when test="productCompanys.length == 2">
     		(productCompany = #{productCompanys[0]} or productCompany = #{productCompanys[1]}) and 
     	</when>
     	<when test="productCompanys.length == 3">
     		(productCompany = #{productCompanys[0]} or productCompany = #{productCompanys[1]} or productCompany = #{productCompanys[2]}) and
     	</when>
     </choose>
     </if>
     <if test="productName != null">
     	productName like CONCAT('%', #{productName}, '%')
     </if>
     <if test="productSort != null">
     	and productSort like CONCAT('%', #{productSort}, '%')
     </if>
     </where> 
     	limit #{start}, #{end}
     </select>
     
     <!-- 제품 순서별 리스트 -->
     <select id = "getProducts" parameterType="hashmap" resultType="power">
        select * from power ${sql} order by ${orderby} limit #{start}, #{end}
     </select>
     
     <insert id="insert" parameterType="power">
        insert into  power (id, code, productCode, productName, productCompany, productSort, 
                nominalOutput,ratedOutput, productDate, 
                regDate, price, count, filename, filesize) 
               values(0, #{code}, #{productCode}, #{productName},#{productCompany},#{productSort},#{nominalOutput}
               ,#{ratedOutput},#{productDate},curdate(),#{price},#{count}, #{filename},#{filesize})
     </insert>
     
     <select id="getPower" resultType="power" parameterType="hashmap">
        select * from power where id = #{id}
     </select>
     
     <update id="readCount" parameterType="hashmap">
        update power set readcount = readcount + 1 where id = #{id}
     </update>
     
     <update id="update" parameterType="power">
        update power set code=#{code}, productCode=#{productCode}, productName=#{productName}, productCompany=#{productCompany}, productSort=#{productSort}, 
        nominalOutput= #{nominalOutput}, ratedOutput=#{ratedOutput}, productDate=#{productDate}, price=#{price}, filename=#{filename}, filesize=#{filesize} where id=#{id}
     </update>
     
     <delete id="deletePower" parameterType="hashmap">
        delete from power where id=#{id}
     </delete>
     
     <!-- 제품 검색창 검색 -->
     <select id = "getSearchedPowers" parameterType = "hashmap" resultType = "power">
     	select * from power
     <where>
     	<if test="keyword != null">
     		productName like CONCAT('%', #{keyword}, '%')
     	</if>
     </where>
     </select>
  </mapper>